package com.dxc.darklight.util;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Date;
import java.util.List;
import java.util.Map;

import org.apache.http.HttpEntity;
import org.apache.http.HttpHost;
import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.conn.params.ConnRoutePNames;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;

import com.dxc.darklight.conf.ConfFactory;
import com.dxc.darklight.model.WeiXinTemplateModel;
import com.dxc.darklight.spider.FinanceNewsSpider;
import com.dxc.darklight.weixin.App;
import com.dxc.darklight.weixin.SysMessage;
import com.dxc.darklight.weixin.Token;
import com.dxc.darklight.weixin.WeiXinUtil;

public class WeixinMsgUtil {
	
	private static final String TOKEN_STR_KEY = "access_token";
	private static final String TOKEN_DATE_KEY = "lastdate";
	private static String CUSTOM_TOKEN = "wxtoken";
	private static String CUSTOM_URL = "https://api.weixin.qq.com/cgi-bin/message/custom/send?access_token=";
	private static String TOKEN_URL = "https://api.weixin.qq.com/cgi-bin/token";	
	private static String TEMPLATE_URL = "https://api.weixin.qq.com/cgi-bin/message/template/send?access_token=";
	private static final Logger log = LogManager.getLogger(FinanceNewsSpider.class);
	
	/**
	 * 发送模板消息
	 * @param mess
	 * @return int
	 */
	public static int sendWeixinMsg(List<WeiXinTemplateModel> data)
	{
		int rev = -1;
		try
		{
			Token accessToken = null;
			accessToken = getAccessToken(App.APP_ID, App.APP_SECRET);
			if(accessToken==null)
			{
				return -1;
			}
			for(WeiXinTemplateModel wt : data)
			{
				String url = TEMPLATE_URL + accessToken.getTokenStr();
				String strJson = "{\"touser\" :\""+wt.getToUser()+"\",";
		        strJson += "\"template_id\":\"tvRyfF1qrurMudMsEigitxG3tbgoz-1T6SY_Ev3rGbU\",";
		        String strurl = wt.getUrl();
				strJson += "\"url\":\""+strurl+"\",";
		        strJson += "\"data\":{";
		        String first= wt.getFirst();
				strJson += "\"first\":{\"value\":\""+first+"\",\"color\":\"#173177\"},";
		        String time= wt.getTime();
				strJson += "\"keyword1\":{\"value\":\""+time+"\",\"color\":\"#173177\"},";
		        String content= wt.getContent();
				strJson += "\"keyword2\":{\"value\":\""+content+"\",\"color\":\"#173177\"},";
		        String remark= wt.getRemark();
				strJson += "\"remark\":{\"value\":\""+remark+"\",\"color\":\"#173177\"}";
		        strJson += "}}";
		        log.debug("sendtemplateurl:"+url);
		        log.debug("strJson:"+strJson);
		        JSONObject ret = WeiXinUtil.httpRequest(url, "POST", strJson);
		        log.debug("result="+ret);
			}
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
		
		return rev;
	}
	
	/**
	 * 获取token
	 * @param appId
	 * @param appsecret
	 * @return
	 */
	private static Token getAccessToken(String appId, String appScrete)
	{
		try
		{
			Token gtoken = generateNewToken(appId, appScrete);
			return gtoken;
		}catch(Exception e)
		{
			e.printStackTrace();
			return null;
		}
	}
	
	/**
	 * 获取token
	 * @param appId
	 * @param appsecret
	 * @return
	 */
	public static Token generateNewToken(String appId,String appsecret) throws Exception{
		log.debug("generateNewToken - appId : " + appId + " appsecret : " + appsecret);
		String tokenstr = getNewToken(appId, appsecret);
		Token token = strToNewToken(tokenstr);
		return token;
	}
	
	/**
	 * 获取一个token
	 * @param appId
	 * @param appsecret
	 * @return
	 */
	private static String getNewToken(String appid,String appsecret) {
		HttpClient httpclient = new DefaultHttpClient();
		HttpGet httpget = new HttpGet(TOKEN_URL + "?grant_type=client_credential&appid=" + appid + "&secret=" + appsecret);
		try {
			String proxyHost = ConfFactory.getConf().get("http.proxy.host");
			if (CommonUtil.notEmpty(proxyHost))
			{
				HttpHost proxy = new HttpHost("web-proxy.usa.hp.com",8080);    
				httpclient.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy); 
			}
			URL u = new URL(TOKEN_URL);
			HttpHost host = new HttpHost(u.getHost(), u.getPort(), u.getProtocol());
			HttpResponse response = httpclient.execute(host, httpget);
			HttpEntity entity = response.getEntity();
			byte[] contentBytes = EntityUtils.toByteArray(entity);
			String content = new String(contentBytes, "utf-8");
			return content;
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (ClientProtocolException e) {
			e.printStackTrace();
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}catch (Exception e) {
			e.printStackTrace();
		} finally {
			httpget.abort();
			httpclient.getConnectionManager().shutdown();
		}
		return null;
	}
	
	/**
	 * 新token的json 没有获得时间，自生成时间
	 * @param tokenstr token,json字符串
	 * @return Token
	 */
	public static Token strToNewToken(String tokenstr){
		Map<String,Object> map = JSON.parseObject(tokenstr, Map.class);
		if (map == null) {
		    return null;
		}
		String tokenStr = (String)map.get(TOKEN_STR_KEY);
		Date date = new Date();
		map.put(TOKEN_DATE_KEY, date.getTime());
		Token token = new Token();
		token.setTokenStr(tokenStr);
		token.setDate(date);
		return token;
	}
	
	/**
	 * main方法，测试
	 */
	public static void main(String[] args)
	{
		/*Token accessToken = null;
		accessToken = getAccessToken(App.APP_ID, App.APP_SECRET);*/
		sendWeixinMsg(null);
	}
	
}
